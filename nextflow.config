/*
 * -------------------------------------------------
 *  GEMmaker Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

params {
    pipeline = 'kallisto'

    /**
     * SAMPLES
     */
    input = ""
    skip_samples = ""
    sras = ""
    keep_sra = false
    keep_retrieved_fastq = false

    /**
     * KALLISTO PIPELINE
     */
    kallisto_index_path = ""
    kallisto_keep_data = false
    kallisto_keep_counts = true
    kallisto_keep_tpm = true
    kallisto_keep_gem = true

    /**
     * SALMON PIPELINE
     */
    salmon_index_path = ""
    salmon_keep_data = false
    salmon_keep_counts = true
    salmon_keep_tpm = true
    salmon_keep_gem = true

    /**
     * HISAT2 PIPELINE
     */
    hisat2_base_name = ""
    hisat2_index_dir = ""
    hisat2_gtf_file = ""
    hisat2_keep_data = false
    hisat2_keep_sam = false
    hisat2_keep_bam = false
    hisat2_keep_counts = true
    hisat2_keep_fpkm = true
    hisat2_keep_tpm = true
    hisat2_keep_gem = true
    trimmomatic_clip_file = "${baseDir}/assets/fasta_adapter.txt"
    trimmomatic_MINLEN = 0.7
    trimmomatic_SLIDINGWINDOW = "4:15"
    trimmomatic_LEADING = 3
    trimmomatic_TRAILING = 6
    trimmomatic_keep_trimmed_fastq = false

    /**
     * JOBS REQUEST OPTIONS
     */
    max_cpus = 4
    max_memory = "4.GB"
    max_time = "24.h"


    /**
     * REPORTS
     */
    failed_run_report_template = "${baseDir}/assets/failed_sra_runs.template.html"
    multiqc_config_file = "${baseDir}/assets/multiqc_config.yaml"
    multiqc_custom_logo = "${baseDir}/assets/systemsgenetics-gemmaker_logo.png"
    publish_multiqc_report = true

    /**
     * Ouptut
     */
    outdir = "${launchDir}/results"
    publish_dir_mode = 'link'

    // Boilerplate options
    multiqc_config = false
    email = false
    email_on_fail = false
    max_multiqc_email_size = 25.MB
    plaintext_email = false
    monochrome_logs = false
    help = false
    igenomes_base = 's3://ngi-igenomes/igenomes/'
    tracedir = "${params.outdir}/pipeline_info"
    igenomes_ignore = true
    custom_config_version = 'master'
    custom_config_base = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    hostnames = false
    config_profile_name = false
    config_profile_description = false
    config_profile_contact = false
    config_profile_url = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'genomes,input_paths'
}

// Container slug. Stable releases should specify release tag!
// Developmental code should specify :dev
process.container = 'systemsgenetics/gemmaker:dev'

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
  includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
  System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

profiles {
  conda {
    docker.enabled = false
    singularity.enabled = false
    podman.enabled = false
    shifter.enabled = false
    charliecloud = false
    process.conda = "$projectDir/environment.yml"
  }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  docker {
    docker.enabled = true
    singularity.enabled = false
    podman.enabled = false
    shifter.enabled = false
    charliecloud.enabled = false
    // Avoid this error:
    //   WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
    // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
    // once this is established and works well, nextflow might implement this behavior as new default.
    docker.runOptions = '-u \$(id -u):\$(id -g)'
  }
  singularity {
    docker.enabled = false
    singularity.enabled = true
    podman.enabled = false
    shifter.enabled = false
    charliecloud.enabled = false
    singularity.autoMounts = true
  }
  podman {
    singularity.enabled = false
    docker.enabled = false
    podman.enabled = true
    shifter.enabled = false
    charliecloud = false
  }
  shifter {
    singularity.enabled = false
    docker.enabled = false
    podman.enabled = false
    shifter.enabled = true
    charliecloud.enabled = false
  }
  charliecloud {
    singularity.enabled = false
    docker.enabled = false
    podman.enabled = false
    shifter.enabled = false
    charliecloud.enabled = true
  }
  test { includeConfig 'conf/test.config' }
  test_full { includeConfig 'conf/test_full.config' }
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
  includeConfig 'conf/igenomes.config'
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = true
  fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action"
  file = "${params.tracedir}/execution_trace.txt"
  raw = true
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.svg"
}

manifest {
  name = 'systemsgenetics/gemmaker'
  author = 'John Hadish, Tyler Biggs, Ben Shealy, Connor Wytko, Sai Prudhvi Oruganti, F. Alex Feltus, & Stephen Ficklin'
  homePage = 'https://github.com/systemsgenetics/gemmaker'
  description = 'GEMmaker is a Nextflow workflow for large-scale gene expression sample processing, expression-level quantification and Gene Expression Matrix (GEM) construction. Results from GEMmaker are useful for differential gene expression (DGE) and gene co-expression network (GCN) analyses. The GEMmaker workflow currently supports Illumina RNA-seq datasets.'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.04.0'
  version = '2.0dev'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
