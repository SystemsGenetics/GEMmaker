/**
 * ===========================
 * GEMmaker Configuration File
 * ===========================
 *
 * This file provides the configuration settings for the GEMmaker workflow.
 */
manifest {
  mainScript = "main.nf"
  defaultBranch = "master"
  nextflowVersion = ">=20.07"
}



params {
  project {
    name = "CORG RNA-Seq example"
    machine_name = "CORG_vs_samples"
    description = "This is the default project settings for GEMmaker. Use these setting to properly describe your project so that others can understand the purpose of your analysis."
  }

  input {
    // The unique name for the genome reference assembly. It must not contain
    // spaces or special characters, only alphanumeric characters and underscores.
    reference_name = "CORG"

    // If you are following the example setup, you do not need to change these
    // parameters.
    reference_dir = "input/references"
    input_data_dir = "input"
    remote_sample_list = "SRA_IDs.txt"
    local_sample_files = "*_{1,2}.fastq"
    skip_list_path = "samples2skip.txt"

    // Gene quantification tool inputs. Note, if you are only using one alignment
    // tool, i.e. kallisto, you do not need references for the other alignment tools
    hisat2 {
      enable = false
      index_dir = "CORG.genome.Hisat2.indexed"
      gtf_file = "CORG.transcripts.gtf"
    }
    kallisto {
      enable = true
      index_file = "CORG.transcripts.Kallisto.indexed"
    }
    salmon {
      enable = false
      index_dir = "CORG.transcripts.Salmon.indexed"
    }
  }

  output {
    // Universal output parameters
    dir = "output"
    sample_dir = { "${params.output.dir}/${sample_id}" }
    publish_mode = "link"
    publish_sra = false
    publish_downloaded_fastq = false
    publish_tpm = true
    publish_raw = true
    multiqc = true
    create_gem = true

    // Salmon and Kallisto specific parameters
    publish_gene_abundance = false

    // Hisat2 specific parameters
    publish_stringtie_gtf_and_ga = false
    publish_trimmed_fastq = false
    publish_bam = false
    publish_sam = false
    publish_fpkm = true
  }

  execution {
    queue_size = 4
  }

  software {
    trimmomatic {
      clip_path = "${baseDir}/files/fasta_adapter.txt"
      MINLEN = "0.7"
      quality = ""
      SLIDINGWINDOW = "4:15"
      LEADING = "3"
      TRAILING = "6"
    }
    failed_run_report {
       template_dir = "${baseDir}/files/failed_sra_runs.template.html"
    }
  }
}



report {
  enabled = true
  file = "${params.output.dir}/reports/report.html"
}



timeline {
  enabled = true
  file = "${params.output.dir}/reports/timeline.html"
}



trace {
  enabled = true
  fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action"
  file = "${params.output.dir}/reports/trace.txt"
  raw = true
}



docker {
  fixOwnership = true
  runOptions = "--init"
}



singularity {
  autoMounts = true
}



process {
  container = "gemmaker/base:1.1"
  errorStrategy = { task.attempt < 3 ? "retry" : "terminate" }

  withLabel:local {
    executor = "local"
    time = "1h"
    memory = 1.GB
  }
  withLabel:gemmaker {
    container = "gemmaker/base:1.1-e2e"
    time = "72h"
  }
  withLabel:fastqc {
    container = "gemmaker/fastqc:0.11.7-1.1"
    time = "24h"
  }
  withLabel:hisat2 {
    container = "gemmaker/hisat2:2.1.0-1.1"
    time = "48h"
  }
  withLabel:kallisto {
    container = "gemmaker/kallisto:0.45.0-1.1"
    time = "24h"
  }
  withLabel:multiqc {
    container = "gemmaker/multiqc:1.8-1.1"
  }
  withLabel:python3 {
    container = "gemmaker/python:3.8.5-1.2"
  }
  withLabel:salmon {
    container = "gemmaker/salmon:0.12.0-1.1"
    time = "24h"
  }
  withLabel:samtools {
    container = "gemmaker/samtools:1.9-1.1"
    time = "48h"
  }
  withLabel:sratoolkit {
    container = "gemmaker/sratoolkit:2.10.0-1.1"
    time = "48h"
  }
  withLabel:stringtie {
    container = "gemmaker/stringtie:1.3.4d-1.1"
    time = "48h"
  }
  withLabel:trimmomatic {
    container = "gemmaker/trimmomatic:0.38-1.1"
    time = "72h"
  }
}



profiles {
  docker {
    docker.enabled = true
  }

  k8s {
    params {
      input.reference_dir = "input"
      software.trimmomatic.clip_path = "/workspace/projects/systemsgenetics/gemmaker/files/fasta_adapter.txt"
    }
    process {
      executor = "k8s"
      cpus = 1
      memory = 8.GB

      withLabel:multithreaded {
        cpus = 8
        memory = 8.GB
      }
    }
    executor {
      queueSize = "${params.execution.queue_size}"
    }
  }

  modules_kamiak {
    withLabel:gemmaker {
      module = "fastQC"
      module = "hisat2"
      module = "python3"
      module = "samtools"
      module = "sratoolkit"
      module = "stringtie"
      module = "trimmomatic"
    }
    withLabel:fastqc {
      module = "fastQC"
    }
    withLabel:hisat2 {
      module = "hisat2"
    }
    withLabel:python3 {
      module = "python3"
    }
    withLabel:samtools {
      module = "samtools"
    }
    withLabel:sratoolkit {
      module = "sratoolkit"
    }
    withLabel:stringtie {
      module = "stringtie"
    }
    withLabel:trimmomatic {
      module = "trimmomatic"
    }
  }

  modules_palmetto {
    withLabel:gemmaker {
      module = "fastqc/0.11.7-gcc/8.3.1:hisat2/2.1.0:anaconda3/5.1.0-gcc/8.3.1:samtools/1.10-gcc/8.3.1:sratoolkit/2.10.0:stringtie/1.3.4d:trimmomatic/0.38"
    }
    withLabel:fastqc {
      module = "fastqc/0.11.7-gcc/8.3.1"
    }
    withLabel:hisat2 {
      module = "hisat2/2.1.0"
    }
    withLabel:python3 {
      module = "anaconda3/5.1.0-gcc/8.3.1"
    }
    withLabel:samtools {
      module = "samtools/1.10-gcc/8.3.1"
    }
    withLabel:sratoolkit {
      module = "sratoolkit/2.10.0"
    }
    withLabel:stringtie {
      module = "stringtie/1.3.4d"
    }
    withLabel:trimmomatic {
      module = "trimmomatic/0.38"
    }
  }

  pbs {
    params {
      output.publish_mode = "copy"
    }
    process {
      executor = "pbspro"
      time = "8h"
      cpus = 1
      memory = 8.GB

      withLabel:multithreaded {
        cpus = 8
        memory = 8.GB
      }
    }
    executor {
      queueSize = "${params.execution.queue_size}"
    }
  }

  retry_ignore {
    process.errorStrategy = { task.attempt < 3 ? "retry" : "ignore" }
  }

  singularity {
    singularity.enabled = true
  }

  slurm {
    process {
      executor = "slurm"
      queue = "ficklin"
      time = "24h"
      cpus = 1
      memory = 8.GB

      withLabel:multithreaded {
        cpus = 1
      }
    }
    executor {
      queueSize = "${params.execution.queue_size}"
    }
  }

  standard {
    process.executor = "local"
  }

  testing {
    process.errorStrategy = "terminate"
  }

  travis {
    docker.enabled = true
    process.errorStrategy = "terminate"
  }
}
