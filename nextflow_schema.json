{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/systemsgenetics/gemmaker/master/nextflow_schema.json",
    "title": "systemsgenetics/gemmaker pipeline parameters",
    "description": "GEMmaker is a Nextflow workflow for large-scale gene expression sample processing, expression-level quantification and Gene Expression Matrix (GEM) construction. Results from GEMmaker are useful for differential gene expression (DGE) and gene co-expression network (GCN) analyses. The GEMmaker workflow currently supports Illumina RNA-seq datasets.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "pipeline"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Use this to specify the location of your input FastQ files. For example:\n\n```bash\n--input 'path/to/data/sample_*_{1,2}.fastq'\n```\n\nPlease note the following requirements:\n\n1. The path must be enclosed in quotes\n2. The path must have at least one `*` wildcard character\n3. When using the pipeline with paired end data, the path must use `{1,2}` notation to specify read pairs.\n\nIf left unspecified, a default pattern is used: `data/*{1,2}.fastq.gz`"
                },
                "pipeline": {
                    "type": "string",
                    "description": "The name of the quantification pipeline that should be used. This should be one of 'kallisto', 'salmon', 'hisat2' or 'star'",
                    "default": "kallisto",
                    "enum": [
                        "kallisto",
                        "salmon",
                        "hisat2",
                        "star"
                    ]
                },
                "sras": {
                    "type": "string",
                    "description": "A text file containing NCBI SRA Run IDs, one per line, that GEMmaker should automatically retrieve. If no files are to be retrieved from SRA the file should be left emptly",
                    "default": "${projectDir}/assets/demo/SRA_IDs.txt"
                },
                "keep_sra": {
                    "type": "boolean",
                    "description": "Indicates if SRA files downloaded from NCBI should be retained. If true, the files are kept, if false they are removed  to save storage space."
                },
                "keep_retrieved_fastq": {
                    "type": "boolean",
                    "description": "Indicates if the dumped FASTQ file from a downloaded SRA file should be kept. If true then the file is kept if false then the file is removed  to save storage space."
                },
                "skip_samples": {
                    "type": "string",
                    "description": "A text file containing the names of SRA runs or local FASTQ samples that should be excluded.",
                    "default": "${projectDir}/assets/demo/samples2skip.txt"
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "failed_run_report_template": {
                    "type": "string",
                    "default": "/local/Projects/GEMmaker/assets/failed_sra_runs.template.html",
                    "description" : "The template HTML file used to generate the Failed samples report."
                },
                "multiqc_config_file": {
                    "type": "string",
                    "default": "/local/Projects/GEMmaker/assets/multiqc_config.yaml", "description": "The MultiQC config file."
                },
                "multiqc_custom_logo": {
                    "type": "string",
                    "default": "/local/Projects/GEMmaker/assets/images/GEMmaker-logo-sm.png",
                    "description": "The MultiQC logo file."
                },
                "publish_multiqc_report": {
                    "type": "boolean",
                    "description": "If True, the MultiQC summary report will be generated.",
                    "default": true
                }
            }
        },
        "trimmomatic_options": {
            "title": "Trimmomatic Options",
            "type": "object",
            "description": "Parameters for Trimmomatic which is used bythe Hisat2 and STAR pipelines.",
            "default": "",
            "properties": {
                "trimmomatic_clip_file": {
                    "type": "string",
                    "description": "This option is only used for the Hisat2 pipeline. The location of the clip file containing sequences of contaminants that should be removed from reads during trimming.",
                    "default": "${projectDir}/assets/fasta_adapter.txt"
                },
                "trimmomatic_MINLEN": {
                    "type": "number",
                    "description": "This option is only used for the Hisat2 pipeline.  The MINLEN parameter for Trimmomatic.",
                    "default": 0.7
                },
                "trimmomatic_SLIDINGWINDOW": {
                    "type": "string",
                    "description": "This option is only used for the Hisat2 pipeline.  The SLIDINGWINDOW parameter for Trimmomatic.",
                    "default": "4:15"
                },
                "trimmomatic_LEADING": {
                    "type": "integer",
                    "description": "This option is only used for the Hisat2 pipeline. The LEADING parameter for Trimmomatic.",
                    "default": 3
                },
                "trimmomatic_TRAILING": {
                    "type": "integer",
                    "description": "This option is only used for the Hisat2 pipeline. The TRAILING parameter for Trimmomatic.",
                    "default": 6
                },
                "trimmomatic_keep_trimmed_fastq": {
                    "type": "boolean",
                    "description": "Indicates if the trimmed FASTQ file should be retained. If true then the file is kept, if false the file is removed to save storage space."
                }
            }
        },
        "kallisto_pipeline": {
            "title": "Kallisto Pipeline",
            "type": "object",
            "description": "Parameters for when the Kallisto pipeline is enabled",
            "default": "",
            "properties": {
                "kallisto_index_path": {
                    "type": "string",
                    "description": "The directory containing the reference genome index files",
                    "default": "${projectDir}/assets/demo/references/CORG.transcripts.Kallisto.indexed"
                },
                "kallisto_bootstrap_samples": {
                    "type": "integer",
                    "description": "Number of bootstrap samples (default: 0)",
                    "default": "0"
                },
                "kallisto_keep_data": {
                    "type": "boolean",
                    "description": "Indicates if the intermediate data files created by Kallisto should be kept. If true, the files are retrained, if false the files are removed to save storage space."
                },
                "kallisto_keep_counts": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the raw abundance counts should be retained. If true then the file is kept, if false the file is removed to save storage space."
                },
                "kallisto_keep_tpm": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the TPM normalized abundance counts should be retained. If true then the file is kept, if false the file is removed to save storage space."
                },
                "kallisto_keep_gem": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the final GEM files should be retained. If true then the file is kept, if false the file is removed to save storage space."
                }
            }
        },
        "salmon_pipeline": {
            "title": "Salmon Pipeline",
            "type": "object",
            "description": "Parameters for when Salmon is enabled",
            "default": "",
            "properties": {
                "salmon_index_path": {
                    "type": "string",
                    "description": "The directory containing the reference genome index files",
                    "default": "${projectDir}/assets/demo/references/CORG.transcripts.Salmon.indexed"
                },
                "salmon_keep_data": {
                    "type": "boolean",
                    "description": "Indicates if the intermediate data files created by Salmon should be kept. If true, the files are retrained, if false the files are removed to save storage space."
                },
                "salmon_keep_counts": {
                    "type": "boolean",
                    "description": "Indicates if the raw abundance counts should be retained. If true then the file is kept, if false the file is removed to save storage space.",
                    "default": true
                },
                "salmon_keep_tpm": {
                    "type": "boolean",
                    "description": "Indicates if the TPM normalized abundance counts should be retained. If true then the file is kept, if false the file is removed to save storage space.",
                    "default": true
                },
                "salmon_keep_gem": {
                    "type": "boolean",
                    "description": "Indicates if the final GEM files should be retained. If true then the file is kept, if false the file is removed to save storage space.",
                    "default": true
                }
            }
        },
        "hisat_pipeline": {
            "title": "Hisat Pipeline",
            "type": "object",
            "description": "Parameters for the Hisat2 pipeline.",
            "default": "",
            "properties": {
                "hisat2_base_name": {
                    "type": "string",
                    "description": "The reference genome base name as required by Hiast2.",
                    "default": "CORG"
                },
                "hisat2_index_dir": {
                    "type": "string",
                    "description": "The directory containing the hisat2 indexed files for the reference genome.",
                    "default": "${projectDir}/assets/demo/references/CORG.genome.Hisat2.indexed"
                },
                "hisat2_gtf_file": {
                    "type": "string",
                    "description": "A GTF of the reference genome.",
                    "default": "${projectDir}/assets/demo/references/CORG.transcripts.gtf"
                },
                "hisat2_keep_data": {
                    "type": "boolean",
                    "description": "Indicates if the intermediate data files created by Hisat2 should be kept. If true, the files are retrained, if false the files are removed to save storage space."
                },
                "hisat2_keep_sam": {
                    "type": "boolean",
                    "description": "Indicates if the SAM file created by Hisat2 should be retained. If true then the file is kept, if false the file is removed to save storage space. These files can be large and should not be kept if  they are not ultimately needed or if storage is limited."
                },
                "hisat2_keep_bam": {
                    "type": "boolean",
                    "description": "Indicates if the BAM file created by Hisat2 should be retained. If true then the file is kept, if false the file is removed to save storage space. These files can be large and should not be kept if  they are not ultimately needed or if storage is limited."
                },
                "hisat2_keep_counts": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the raw abundance counts should be retained. If true then the file is kept, if false the file is removed to save storage space."
                },
                "hisat2_keep_fpkm": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the FPKM normalized counts should be retained. If true then the file is kept, if false the file is removed to save storage space."
                },
                "hisat2_keep_tpm": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the TPM normalized counts should be retained. If true then the file is kept, if false the file is removed to save storage space."
                },
                "hisat2_keep_gem": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the GEM file should be retained. If true then the file is kept, if false the file is removed to save storage space."
                }
            }
        },
        "star_pipeline": {
            "title": "Star Pipeline",
            "type": "object",
            "description": "Parameters for the Star pipeline.",
            "default": "",
            "properties": {
                "star_index_dir": {
                    "type": "string",
                    "description": "The directory containing the star indexed files for the reference genome.",
                    "default": "${projectDir}/assets/demo/references/CORG.genome.star.indexed"
                },
                "star_gtf_file": {
                    "type": "string",
                    "description": "A GTF of the reference genome.",
                    "default": "${projectDir}/assets/demo/references/CORG.transcripts.gtf"
                },
                "star_keep_data": {
                    "type": "boolean",
                    "description": "Indicates if the intermediate data files created by Star should be kept. If true, the files are retrained, if false the files are removed to save storage space."
                },
                "star_keep_sam": {
                    "type": "boolean",
                    "description": "Indicates if the SAM file created by star should be retained. If true then the file is kept, if false the file is removed to save storage space. These files can be large and should not be kept if  they are not ultimately needed or if storage is limited."
                },
                "star_keep_bam": {
                    "type": "boolean",
                    "description": "Indicates if the BAM file created by star should be retained. If true then the file is kept, if false the file is removed to save storage space. These files can be large and should not be kept if  they are not ultimately needed or if storage is limited."
                },
                "star_keep_counts": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the raw abundance counts should be retained. If true then the file is kept, if false the file is removed to save storage space."
                },
                "star_keep_fpkm": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the FPKM normalized counts should be retained. If true then the file is kept, if false the file is removed to save storage space."
                },
                "star_keep_tpm": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the TPM normalized counts should be retained. If true then the file is kept, if false the file is removed to save storage space."
                },
                "star_keep_gem": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the GEM file should be retained. If true then the file is kept, if false the file is removed to save storage space."
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                 "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "hidden": true,
                    "fa_icon": "fas fa-bacon"
                },
                "singularity_pull_docker_container": {
                    "type": "boolean",
                    "description": "Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead.",
                    "hidden": true,
                    "fa_icon": "fas fa-toolbox",
                    "help_text": "This may be useful for example if you are unable to directly pull Singularity containers to run the pipeline due to http/https proxy issues."
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 4,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 2`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "6.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^[\\d\\.]+\\s*.(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "72.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '72.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/trimmomatic_options"
        },
        {
            "$ref": "#/definitions/kallisto_pipeline"
        },
        {
            "$ref": "#/definitions/salmon_pipeline"
        },
        {
            "$ref": "#/definitions/hisat_pipeline"
        },
        {
            "$ref": "#/definitions/star_pipeline"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ]
}
